---
name: Documentation

on:
  # push:
  #   branches:
  #     - main
  #     - master
  #   paths:
  #     - 'src/**'
  #     - 'Cargo.toml'
  #     - '.github/workflows/docs.yml'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'src/**'
      - 'Cargo.toml'
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build-and-deploy:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Build documentation
        run: |
          cargo doc --no-deps --document-private-items --all-features

      - name: Add index redirect
        run: |
          echo '<meta http-equiv="refresh" content="0; url=expense_tracker/index.html">' > target/doc/index.html

      - name: Copy docs to docs/ directory
        run: |
          rm -rf docs
          cp -r target/doc docs

      - name: Create .nojekyll file
        run: touch docs/.nojekyll

      - name: Commit and push documentation
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/
          if git diff --staged --quiet; then
            echo "No documentation changes to commit"
          else
            git commit -m "docs: update documentation [skip ci]"
            git push origin ${{ github.ref_name }}
          fi

  check:
    name: Check Documentation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Check documentation builds without errors
        run: cargo doc --no-deps --document-private-items --all-features

      - name: Check for broken intra-doc links
        run: |
          cargo rustdoc --all-features -- -D warnings

      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}';
            const body = status === 'success'
              ? '✅ **Documentation Check Passed**\n\nDocumentation builds successfully without errors or warnings.'
              : '❌ **Documentation Check Failed**\n\nPlease fix documentation errors before merging. Check the workflow logs for details.';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
